@using NotificationPortal.Web.Data
@model ChallengeListViewModel

@{
    ViewData["Title"] = "Challenge List";

    @* bool ShowSpinner(ChallengeStatus challengeStatus)
        {
        switch (challengeStatus)
        {
        case ChallengeStatus.Challenging:
        case ChallengeStatus.Accepting:
        case ChallengeStatus.Declining:
        return true;
        default:
        return false;
        }
        }

        string GetStatusColor(ChallengeStatus challengeStatus)
        {
        switch (challengeStatus)
        {
        case ChallengeStatus.Accepted:
        return "lightgreen";
        case ChallengeStatus.Declined:
        return "darkorange";
        case ChallengeStatus.Challenged:
        default:
        return "white";
        }
        } *@
}

<div class="text-center" id="challenges">
    @* <h1 class="display-4">Challenges</h1>
        <div id="notification_list">
        <table class="table">
        <thead>
        <th scope="col">Id</th>
        <th scope="col">Community</th>
        <th scope="col">From</th>
        <th scope="col">To</th>
        <th scope="col">Type</th>
        <th scope="col">Date</th>
        <th scope="col" style="width: 150px">Action</th>
        </thead>

        <tbody id="challengeListTableBody">
        @foreach (var challenge in Model.Challenges.OrderByDescending(c => c.Id))
        {
        <tr>
        <td>@challenge.Id</td>
        <td>@challenge.CommunityName</td>
        <td>@challenge.FromPlayer</td>
        <td>@challenge.ToPlayer</td>
        <td style="background-color: @GetStatusColor(challenge.Status)" class="challenge-status-cell"
        data-id="@challenge.Id">
        @{
        if (ShowSpinner(challenge.Status))
        {
        <div class="loader">Waiting...</div>
        }
        else
        {
        @challenge.Status
        }
        }
        </td>
        <td class="date-cell">@challenge.Date.FormatDateTime()</td>
        <td>
        @if (challenge.Status == ChallengeStatus.Challenged || challenge.Status ==
        ChallengeStatus.Challenging)
        {
        <button class="accept-challenge-button" disabled data-id="@challenge.Id">Accept</button>
        <button class="decline-challenge-button" disabled data-id="@challenge.Id">Decline</button>
        }
        </td>
        </tr>
        }
        </tbody>
        </table>
        </div>
        <div class="connection-status-indicator" id="connectionStatusIndicator"></div> *@
</div>
<script src="~/transpiled/challenges.js" asp-append-version="true"></script>
